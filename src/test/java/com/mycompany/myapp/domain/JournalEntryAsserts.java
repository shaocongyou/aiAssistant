package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class JournalEntryAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalEntryAllPropertiesEquals(JournalEntry expected, JournalEntry actual) {
        assertJournalEntryAutoGeneratedPropertiesEquals(expected, actual);
        assertJournalEntryAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalEntryAllUpdatablePropertiesEquals(JournalEntry expected, JournalEntry actual) {
        assertJournalEntryUpdatableFieldsEquals(expected, actual);
        assertJournalEntryUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalEntryAutoGeneratedPropertiesEquals(JournalEntry expected, JournalEntry actual) {
        assertThat(actual)
            .as("Verify JournalEntry auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalEntryUpdatableFieldsEquals(JournalEntry expected, JournalEntry actual) {
        assertThat(actual)
            .as("Verify JournalEntry relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getContent()).as("check content").isEqualTo(expected.getContent()))
            .satisfies(a ->
                assertThat(a.getContentContentType()).as("check content contenty type").isEqualTo(expected.getContentContentType())
            )
            .satisfies(a -> assertThat(a.getMood()).as("check mood").isEqualTo(expected.getMood()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertJournalEntryUpdatableRelationshipsEquals(JournalEntry expected, JournalEntry actual) {
        // empty method
    }
}

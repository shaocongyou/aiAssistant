package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class SocialConnectionAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialConnectionAllPropertiesEquals(SocialConnection expected, SocialConnection actual) {
        assertSocialConnectionAutoGeneratedPropertiesEquals(expected, actual);
        assertSocialConnectionAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialConnectionAllUpdatablePropertiesEquals(SocialConnection expected, SocialConnection actual) {
        assertSocialConnectionUpdatableFieldsEquals(expected, actual);
        assertSocialConnectionUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialConnectionAutoGeneratedPropertiesEquals(SocialConnection expected, SocialConnection actual) {
        assertThat(actual)
            .as("Verify SocialConnection auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialConnectionUpdatableFieldsEquals(SocialConnection expected, SocialConnection actual) {
        assertThat(actual)
            .as("Verify SocialConnection relevant properties")
            .satisfies(a -> assertThat(a.getFriendUsername()).as("check friendUsername").isEqualTo(expected.getFriendUsername()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertSocialConnectionUpdatableRelationshipsEquals(SocialConnection expected, SocialConnection actual) {
        // empty method
    }
}

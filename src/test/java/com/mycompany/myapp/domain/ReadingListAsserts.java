package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class ReadingListAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReadingListAllPropertiesEquals(ReadingList expected, ReadingList actual) {
        assertReadingListAutoGeneratedPropertiesEquals(expected, actual);
        assertReadingListAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReadingListAllUpdatablePropertiesEquals(ReadingList expected, ReadingList actual) {
        assertReadingListUpdatableFieldsEquals(expected, actual);
        assertReadingListUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReadingListAutoGeneratedPropertiesEquals(ReadingList expected, ReadingList actual) {
        assertThat(actual)
            .as("Verify ReadingList auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReadingListUpdatableFieldsEquals(ReadingList expected, ReadingList actual) {
        assertThat(actual)
            .as("Verify ReadingList relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getStatus()).as("check status").isEqualTo(expected.getStatus()))
            .satisfies(a -> assertThat(a.getStartDate()).as("check startDate").isEqualTo(expected.getStartDate()))
            .satisfies(a -> assertThat(a.getEndDate()).as("check endDate").isEqualTo(expected.getEndDate()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertReadingListUpdatableRelationshipsEquals(ReadingList expected, ReadingList actual) {
        // empty method
    }
}

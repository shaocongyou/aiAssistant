package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class GoalAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGoalAllPropertiesEquals(Goal expected, Goal actual) {
        assertGoalAutoGeneratedPropertiesEquals(expected, actual);
        assertGoalAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGoalAllUpdatablePropertiesEquals(Goal expected, Goal actual) {
        assertGoalUpdatableFieldsEquals(expected, actual);
        assertGoalUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGoalAutoGeneratedPropertiesEquals(Goal expected, Goal actual) {
        assertThat(actual)
            .as("Verify Goal auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGoalUpdatableFieldsEquals(Goal expected, Goal actual) {
        assertThat(actual)
            .as("Verify Goal relevant properties")
            .satisfies(a -> assertThat(a.getTitle()).as("check title").isEqualTo(expected.getTitle()))
            .satisfies(a -> assertThat(a.getDescription()).as("check description").isEqualTo(expected.getDescription()))
            .satisfies(a -> assertThat(a.getGoalType()).as("check goalType").isEqualTo(expected.getGoalType()))
            .satisfies(a -> assertThat(a.getDeadline()).as("check deadline").isEqualTo(expected.getDeadline()))
            .satisfies(a -> assertThat(a.getCompleted()).as("check completed").isEqualTo(expected.getCompleted()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()))
            .satisfies(a -> assertThat(a.getUpdatedAt()).as("check updatedAt").isEqualTo(expected.getUpdatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertGoalUpdatableRelationshipsEquals(Goal expected, Goal actual) {
        // empty method
    }
}

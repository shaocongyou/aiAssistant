package com.mycompany.myapp.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class HabitAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHabitAllPropertiesEquals(Habit expected, Habit actual) {
        assertHabitAutoGeneratedPropertiesEquals(expected, actual);
        assertHabitAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHabitAllUpdatablePropertiesEquals(Habit expected, Habit actual) {
        assertHabitUpdatableFieldsEquals(expected, actual);
        assertHabitUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHabitAutoGeneratedPropertiesEquals(Habit expected, Habit actual) {
        assertThat(actual)
            .as("Verify Habit auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHabitUpdatableFieldsEquals(Habit expected, Habit actual) {
        assertThat(actual)
            .as("Verify Habit relevant properties")
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getHabitType()).as("check habitType").isEqualTo(expected.getHabitType()))
            .satisfies(a -> assertThat(a.getFrequency()).as("check frequency").isEqualTo(expected.getFrequency()))
            .satisfies(a -> assertThat(a.getStartDate()).as("check startDate").isEqualTo(expected.getStartDate()))
            .satisfies(a -> assertThat(a.getActive()).as("check active").isEqualTo(expected.getActive()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertHabitUpdatableRelationshipsEquals(Habit expected, Habit actual) {
        // empty method
    }
}
